[{"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\index.tsx":"1","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\serviceWorker.ts":"2","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\App.tsx":"3","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\HomePage.tsx":"4","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\SettingsPage.tsx":"5","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\EntryPage.tsx":"6","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\LoginPage.tsx":"7","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\AppTabs.tsx":"8","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\Auth.ts":"9","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\NotFoundPage.tsx":"10","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\firebase.ts":"11","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\RegisterPage.tsx":"12","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\AccountPage.tsx":"13","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\Models.ts":"14","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\utils\\helpers.ts":"15","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\shared\\Modal.tsx":"16","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\components\\EntriesItem.tsx":"17","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\context\\dataContext.ts":"18","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\store.ts":"19","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\reducers\\index.ts":"20","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\reducers\\AuthReducer.ts":"21","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\types.ts":"22","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\AuthActions.ts":"23","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\authActions.ts":"24","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\reducers\\MemoriesReducers.ts":"25","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\MemoriesAction.ts":"26","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\MembersPage.tsx":"27","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\TeamSelectionPage.tsx":"28","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\TeamPage.tsx":"29","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\reducers\\TeamReducer.ts":"30","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\TeamActions.ts":"31","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\AddEventPage.tsx":"32","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\shared\\EditModel.tsx":"33","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\EventsAction.ts":"34","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\shared\\EditPage.tsx":"35"},{"size":1304,"mtime":1621294980765,"results":"36","hashOfConfig":"37"},{"size":5358,"mtime":1620305559668,"results":"38","hashOfConfig":"37"},{"size":1743,"mtime":1635806643867,"results":"39","hashOfConfig":"37"},{"size":1448,"mtime":1635087102112,"results":"40","hashOfConfig":"37"},{"size":2232,"mtime":1635082269424,"results":"41","hashOfConfig":"37"},{"size":7887,"mtime":1635728081306,"results":"42","hashOfConfig":"37"},{"size":2343,"mtime":1635090068508,"results":"43","hashOfConfig":"37"},{"size":3911,"mtime":1635808479766,"results":"44","hashOfConfig":"37"},{"size":1770,"mtime":1634955163509,"results":"45","hashOfConfig":"37"},{"size":280,"mtime":1620493270667,"results":"46","hashOfConfig":"37"},{"size":3291,"mtime":1635093490875,"results":"47","hashOfConfig":"37"},{"size":5412,"mtime":1635719509372,"results":"48","hashOfConfig":"37"},{"size":3057,"mtime":1620575529680,"results":"49","hashOfConfig":"37"},{"size":601,"mtime":1635719456221,"results":"50","hashOfConfig":"37"},{"size":364,"mtime":1635539142949,"results":"51","hashOfConfig":"37"},{"size":1027,"mtime":1620865490330,"results":"52","hashOfConfig":"37"},{"size":1864,"mtime":1635771897453,"results":"53","hashOfConfig":"37"},{"size":620,"mtime":1621283878922,"results":"54","hashOfConfig":"37"},{"size":556,"mtime":1635248074313,"results":"55","hashOfConfig":"37"},{"size":296,"mtime":1635253758812,"results":"56","hashOfConfig":"37"},{"size":1182,"mtime":1635508561283,"results":"57","hashOfConfig":"37"},{"size":348,"mtime":1635717758754,"results":"58","hashOfConfig":"37"},{"size":865,"mtime":1635719454972,"results":"59","hashOfConfig":"37"},{"size":681,"mtime":1621815174994,"results":"60","hashOfConfig":"37"},{"size":1132,"mtime":1635700042733,"results":"61","hashOfConfig":"37"},{"size":558,"mtime":1635123485691,"results":"62","hashOfConfig":"37"},{"size":1040,"mtime":1635254296176,"results":"63","hashOfConfig":"37"},{"size":2768,"mtime":1635807944055,"results":"64","hashOfConfig":"37"},{"size":2551,"mtime":1635799802434,"results":"65","hashOfConfig":"37"},{"size":1757,"mtime":1635719478248,"results":"66","hashOfConfig":"37"},{"size":1292,"mtime":1635719451612,"results":"67","hashOfConfig":"37"},{"size":6596,"mtime":1635470105989,"results":"68","hashOfConfig":"37"},{"size":7330,"mtime":1635704813296,"results":"69","hashOfConfig":"37"},{"size":2024,"mtime":1635728994370,"results":"70","hashOfConfig":"37"},{"size":7790,"mtime":1635726890391,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1a4tyk3",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"74"},"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\index.tsx",[],["159","160"],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\serviceWorker.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\App.tsx",["161","162","163","164","165","166"],"import { IonApp, IonLoading } from \"@ionic/react\";\r\nimport React, { } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store';\r\nimport { IonReactRouter } from \"@ionic/react-router\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport AppTabs from \"./AppTabs\";\r\nimport { AuthContext, useAuthInit } from \"./Auth\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport TeamSelectionPage from \"./pages/TeamSelectionPage\";\r\n\r\nconst App: React.FC = (props: any) => {\r\n  // const { loading, auth } = useAuthInit();\r\n  //const { data } = useAuthInit2(auth);\r\n  const { loggedIn, user } = props.currentUser;\r\n  //  logInStarted(auth)\r\n\r\n  return (\r\n    <IonApp>\r\n      <IonReactRouter >\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route path=\"/teams\">\r\n            <TeamSelectionPage />\r\n          </Route>\r\n          <Route path=\"/my/teams/:id\">\r\n            <AppTabs />\r\n          </Route>\r\n          {loggedIn ?\r\n            <Redirect exact path=\"/\" to=\"/teams\" />\r\n            :\r\n            <Redirect to=\"/login\" />\r\n          }\r\n          <Route>\r\n            <NotFoundPage />\r\n          </Route>\r\n        </Switch>\r\n      </IonReactRouter>\r\n    </IonApp>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.auth,\r\n});\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   logInStarted: user => dispatch(logInStarted(user))\r\n// });\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\HomePage.tsx",["167","168","169","170"],"import {\r\n  IonContent,\r\n  IonHeader,\r\n  IonList,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { add as addIcon } from \"ionicons/icons\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport EntriesItem from '../components/EntriesItem';\r\nimport { getMemoriesForUser } from '../actions/MemoriesAction';\r\n\r\nconst HomePage: React.FC = (props: any) => {\r\n\r\n  useEffect(() => {\r\n    props.getMemoriesForUser(props.currentUserId)\r\n  }, [props.currentUserId]);\r\n\r\n  //  firestore.collection('users').doc(props.currentUserId).collection(\"entries\").get().then(snaphot => { console.log(snaphot) });\r\n  console.log(props.memories)\r\n  console.dir(props.memories)\r\n\r\n  if (!props.memories) {\r\n    return (\r\n      <div>Loading....</div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent className=\"ion-padding\">\r\n        <IonList>\r\n          <EntriesItem />\r\n        </IonList>\r\n        <IonFab vertical=\"bottom\" horizontal=\"end\">\r\n          <IonFabButton routerLink=\"/my/entries/add\">\r\n            <IonIcon icon={addIcon} />\r\n          </IonFabButton>\r\n        </IonFab>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.auth,\r\n  currentUserId: state.auth.user.uid,\r\n  memories: state.memories.memories\r\n});\r\n\r\nexport default connect(mapStateToProps, { getMemoriesForUser })(HomePage);\r\n",["171","172"],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\SettingsPage.tsx",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\EntryPage.tsx",["173","174"],"import {\r\n  IonBackButton,\r\n  IonButton,\r\n  IonButtons,\r\n  IonContent,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonItem,\r\n  IonPage,\r\n  IonText,\r\n  IonTitle,\r\n  IonToolbar,\r\n  useIonViewWillEnter,\r\n  useIonViewDidEnter\r\n} from \"@ionic/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { formatDate, formatTime } from \"../utils/helpers\";\r\nimport { trash as trashIcon } from \"ionicons/icons\";\r\nimport { Modal } from '../shared/Modal';\r\nimport { connect } from \"react-redux\";\r\nimport { EditModal } from './../shared/EditModel';\r\nimport { getSingleEvent } from \"../actions/EventsAction\";\r\nimport { resetSingleEntry } from '../actions/EventsAction';\r\n\r\ninterface RouterParams {\r\n  id: string;\r\n}\r\n\r\nconst EntryPage: React.FC = (props: any) => {\r\n  const history = useHistory();\r\n  const { id } = useParams<RouterParams>();\r\n  const [entry, setEntry] = useState();\r\n  const [deleteing, setDeleting] = useState(false);\r\n  const [userIsAdmin, setUserIsAdmin] = useState(false)\r\n  const [editStart, setEditStart] = useState(false)\r\n\r\n  function isUserAdminCheck() {\r\n    console.log(props.teamMembers)\r\n    const checkingMember = props.teamMembers.filter(member => member.id === props.currentUser.userId)\r\n    console.log(checkingMember)\r\n    if (checkingMember[0].isAdmin === true) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  useIonViewWillEnter(() => {\r\n    const singleEntry = props.getSingleEvent(props.teamId, id)\r\n    console.log('USEEFFECT for SINGLE entry ', singleEntry)\r\n    setEntry(singleEntry);\r\n    setUserIsAdmin(isUserAdminCheck())\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const singleEntry = props.getSingleEvent(props.teamId, id)\r\n    console.log('USEEFFECT for SINGLE entry effect ', singleEntry)\r\n    setEntry(singleEntry);\r\n  }, [])\r\n\r\n  // useIonViewDidEnter(() => {\r\n  //   const singleEntry = props.getSingleEvent(props.teamId, id)\r\n  //   console.log('USEEFFECT for SINGLE entry IONIC ', singleEntry)\r\n  //   setEntry(singleEntry);\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"RESTTINNGGGGGGG JHGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFJK\")\r\n  //   props.resetSingleEntry()\r\n  // }, [])\r\n\r\n  const handleDelete = async () => {\r\n    console.log('handle delete')\r\n    setDeleting(true)\r\n    // const entryRef = firestore\r\n    //   .collection(\"users\")\r\n    //   .doc(props.currentUserId)\r\n    //   .collection(\"entries\")\r\n    //   .doc(id);\r\n    // await entryRef.delete();\r\n    setDeleting(false);\r\n    // console.log('delete ends')\r\n    history.goBack();\r\n  };\r\n\r\n  const cancelDeleting = () => {\r\n    console.log('DELETING CANCEL')\r\n    setDeleting(false);\r\n  }\r\n\r\n  const handleEditing = () => {\r\n    setEditStart(true)\r\n    console.log('Editing')\r\n\r\n  }\r\n\r\n  const CancelEditing = () => {\r\n    console.log('Cancel EDIT - need FETCH Event HERE');\r\n\r\n    setEditStart(false)\r\n  }\r\n\r\n  const gettingSingle = () => {\r\n    console.log('getting siglesssss ', props.teamId, id)\r\n    props.getSingleEvent(props.teamId, id)\r\n  }\r\n\r\n  if (!props.singleEntry) {\r\n    return (\r\n      <div>Loading....</div>\r\n    )\r\n  }\r\n  console.log(entry)\r\n  console.log(props.singleEntry)\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonBackButton />\r\n          </IonButtons>\r\n          {\r\n            userIsAdmin ?\r\n              <IonButtons slot=\"end\">\r\n                <IonButton onClick={() => setDeleting(true)}>\r\n                  <IonIcon icon={trashIcon} slot=\"icon-only\" />\r\n                </IonButton>\r\n              </IonButtons>\r\n              :\r\n              <div></div>\r\n          }\r\n\r\n          <IonTitle>Entry for {formatDate(props.singleEntry.date)}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent className=\"ion-padding\">\r\n        <Modal\r\n          modalText={\"Are you sure you want to delete this memory?\"}\r\n          displayModal={deleteing}\r\n          onCancel={cancelDeleting}\r\n          onConfirm={handleDelete}\r\n        />\r\n        <EditModal\r\n          modalText={'Editing this entry!'}\r\n          displayModal={editStart}\r\n          eventDetails={props.singleEntry}\r\n          onConfirm={handleEditing}\r\n          onCancel={CancelEditing}\r\n          teamId={props.teamId}\r\n          eventId={id}\r\n        />\r\n        <h4>{props.singleEntry.title}</h4>\r\n        <p>{props.singleEntry.description}</p>\r\n        <br />\r\n        <IonText>Start at: {formatTime(props.singleEntry.startTime)}</IonText>\r\n        <br />\r\n        <IonText>Ending at: {formatTime(props.singleEntry.endTime)}</IonText>\r\n        {!props.singleEntry.attendanceRequired ?\r\n          <div></div>\r\n          :\r\n          props.singleEntry.attendanceRequired === true ?\r\n            <p>We will need Attendance</p>\r\n            :\r\n            <div></div>\r\n        }\r\n        {props.singleEntry.isMatch === true ?\r\n          <IonText>Final Score: {props.singleEntry.result}</IonText>\r\n          :\r\n          <div></div>\r\n        }\r\n      </IonContent>\r\n      {\r\n        userIsAdmin ?\r\n          <IonItem\r\n            routerLink={`/my/entries/view/edit/${id}`}\r\n          >\r\n            <IonButton\r\n              onClick={() => { }}\r\n            >EDIT</IonButton>\r\n          </IonItem>\r\n          :\r\n          <div>Messages</div>\r\n      }\r\n      <IonButton\r\n        onClick={gettingSingle}\r\n      >Get Event details</IonButton>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.auth,\r\n  currentUserId: state.auth.user.uid,\r\n  teamEvents: state.team.events,\r\n  teamMembers: state.team.members,\r\n  teamId: state.team.team,\r\n  singleEntry: state.team.singleEvent,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getSingleEvent, resetSingleEntry })(EntryPage);\r\n\r\n\r\n\r\n// if (!entry) {\r\n//   return (\r\n//     <div>Loading....</div>\r\n//   )\r\n// }\r\n\r\n// return (\r\n//   <IonPage>\r\n//     <IonHeader>\r\n//       <IonToolbar>\r\n//         <IonButtons slot=\"start\">\r\n//           <IonBackButton />\r\n//         </IonButtons>\r\n//         {\r\n//           userIsAdmin ?\r\n//             <IonButtons slot=\"end\">\r\n//               <IonButton onClick={() => setDeleting(true)}>\r\n//                 <IonIcon icon={trashIcon} slot=\"icon-only\" />\r\n//               </IonButton>\r\n//             </IonButtons>\r\n//             :\r\n//             <div></div>\r\n//         }\r\n\r\n//         <IonTitle>Entry for {formatDate(entry.date)}</IonTitle>\r\n//       </IonToolbar>\r\n//     </IonHeader>\r\n//     <IonContent className=\"ion-padding\">\r\n//       <Modal\r\n//         modalText={\"Are you sure you want to delete this memory?\"}\r\n//         displayModal={deleteing}\r\n//         onCancel={cancelDeleting}\r\n//         onConfirm={handleDelete}\r\n//       />\r\n//       <EditModal\r\n//         modalText={'Editing this entry!'}\r\n//         displayModal={editStart}\r\n//         eventDetails={entry}\r\n//         onConfirm={handleEditing}\r\n//         onCancel={CancelEditing}\r\n//         teamId={props.teamId}\r\n//       />\r\n//       <h4>{entry.title}</h4>\r\n//       <p>{entry.description}</p>\r\n//       <br />\r\n//       <IonText>Start at: {formatTime(entry.startTime)}</IonText>\r\n//       <br />\r\n//       <IonText>Ending at: {formatTime(entry.endTime)}</IonText>\r\n//       {!entry.attendanceRequired ?\r\n//         <div></div>\r\n//         :\r\n//         entry.attendanceRequired === true ?\r\n//           <p>We will need Attendance</p>\r\n//           :\r\n//           <div></div>\r\n//       }\r\n//       {entry.isMatch === true ?\r\n//         <IonText>Final Score: {entry.result}</IonText>\r\n//         :\r\n//         <div></div>\r\n//       }\r\n//     </IonContent>\r\n//     {\r\n//       userIsAdmin ?\r\n//         <IonButton\r\n//           onClick={handleEditing}\r\n//         >EDIT</IonButton>\r\n//         :\r\n//         <div>Messages</div>\r\n//     }\r\n//     <IonButton\r\n//       onClick={gettingSingle}\r\n//     >Get Event details</IonButton>\r\n//   </IonPage>","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\LoginPage.tsx",["175","176"],"import {\r\n  IonButton,\r\n  IonContent,\r\n  IonHeader,\r\n  IonLabel,\r\n  IonList,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonItem,\r\n  IonInput,\r\n  IonText,\r\n  IonLoading,\r\n} from \"@ionic/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// import { useAuth } from \"../Auth\";\r\n// import { auth } from \"../firebase\";\r\n\r\nimport { logInUser } from '../actions/AuthActions';\r\n\r\nconst LoginPage: React.FC = (props: any) => {\r\n  //  const { loggedIn } = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [status, setStatus] = useState({ loading: false, error: false });\r\n\r\n  const handleLogin = () => {\r\n    props.logInUser(email, password);\r\n  };\r\n\r\n  if (props.user.loggedIn === true) {\r\n    return <Redirect to=\"/teams\" />;\r\n  }\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>Login</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent className=\"ion-padding\">\r\n        <IonList>\r\n          <IonItem>\r\n            <IonLabel position=\"stacked\">Email</IonLabel>\r\n            <IonInput\r\n              type=\"email\"\r\n              value={email}\r\n              onIonChange={(event) => setEmail(event.detail.value)}\r\n            />\r\n          </IonItem>\r\n          <IonItem>\r\n            <IonLabel position=\"stacked\">Password</IonLabel>\r\n            <IonInput\r\n              type=\"password\"\r\n              value={password}\r\n              onIonChange={(event) => setPassword(event.detail.value)}\r\n            />\r\n          </IonItem>\r\n        </IonList>\r\n        {status.error && (\r\n          <IonText color=\"danger\">\r\n            Invalid Credentials. Please try again.\r\n          </IonText>\r\n        )}\r\n        <IonButton expand=\"block\" onClick={handleLogin}>\r\n          Login\r\n        </IonButton>\r\n        <br></br>\r\n        <IonButton expand=\"block\" fill=\"clear\" routerLink=\"/register\">\r\n          Don't have account?\r\n        </IonButton>\r\n        <IonLoading isOpen={status.loading} />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    user: state.auth,\r\n    userLoggedIn: state.auth.loggedIn,\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, { logInUser })(LoginPage);\r\n","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\AppTabs.tsx",["177","178","179","180","181","182","183"],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\Auth.ts",["184","185"],"import React, { useEffect, useContext, useState } from 'react';\r\nimport { auth as firebaseAuth } from './firebase';\r\nimport { firestore } from \"./firebase\";\r\nimport { toAccount, Account } from './Models';\r\n\r\ninterface Auth {\r\n    loggedIn: Boolean;\r\n    userId?: String;\r\n    userName?: string;\r\n    pictureUrl?: string;\r\n    userDetailRef?: any; \r\n}\r\ninterface AuthInit {\r\n    auth?: Auth;\r\n    loading: Boolean;\r\n    userName?: string;\r\n    pictureUrl?: string;\r\n}\r\n\r\nexport const AuthContext = React.createContext<Auth>({ loggedIn: false, userName: '' });\r\n\r\nexport function useAuth(): Auth {\r\n    return useContext(AuthContext)\r\n};\r\n\r\nexport function useAuthInit(): AuthInit {\r\n    const [authInit, setAuthInit] = useState<AuthInit>({\r\n        loading: true,\r\n      });\r\n    \r\n      useEffect(() => {\r\n        // firebase.auth().onAuthStateChanged((user) => {\r\n        return firebaseAuth.onAuthStateChanged((firebaseUser) => {\r\n            const auth = firebaseUser ? { loggedIn: true, userId: firebaseUser.uid } : { loggedIn: false };\r\n            setAuthInit({ loading: false, auth });\r\n        });\r\n      }, []);\r\n\r\n      return authInit\r\n};\r\n\r\nexport function useDeatilsInit(userDetailsRef): Auth {\r\n    const [userDetails, setuserDetails] = useState<Auth>({\r\n        loggedIn: false,\r\n    });\r\n    \r\n  \r\n       \r\n    userDetailsRef.get().then((doc) => {\r\n      setuserDetails(toAccount(doc) as any);\r\n    \r\n\r\n        // firebase.auth().onAuthStateChanged((user) => {\r\n        // return firebaseAuth.onAuthStateChanged((firebaseUser) => {\r\n        //     const auth = firebaseUser ? { loggedIn: true, userId: firebaseUser.uid } : { loggedIn: false };\r\n        //     setuserDetails({ loggedIn: true });\r\n        // });\r\n      });\r\n\r\n      return userDetails\r\n};",["186","187"],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\NotFoundPage.tsx",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\firebase.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\RegisterPage.tsx",["188"],"import {\r\n  IonButton,\r\n  IonContent,\r\n  IonHeader,\r\n  IonLabel,\r\n  IonList,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonItem,\r\n  IonInput,\r\n  IonText,\r\n  IonLoading,\r\n  isPlatform,\r\n} from \"@ionic/react\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { CameraResultType, CameraSource, Plugins } from \"@capacitor/core\";\r\nimport { auth, createUserProfileDocument2, storage } from \"../firebase\";\r\nimport { logInUser } from \"../actions/AuthActions\";\r\n\r\nconst { Camera } = Plugins;\r\n\r\nasync function savePicture(blobUrl, userId) {\r\n\r\n  const pictureRef = storage.ref(`/users/${userId}/pictures/${Date.now()}`);\r\n  const response = await fetch(blobUrl);\r\n  const blob = await response.blob();\r\n  const snapshot = await pictureRef.put(blob);\r\n  const url = snapshot.ref.getDownloadURL();\r\n  URL.revokeObjectURL(blobUrl);\r\n  return url;\r\n}\r\n\r\nconst RegisterPage: React.FC = (props: any) => {\r\n  //  const { loggedIn } = useAuth();\r\n  const [newUser, setNewUser] = useState({\r\n    email: '',\r\n    password: '',\r\n    userName: '',\r\n    pictureUrl: \"/assets/placeholder.png\",\r\n    isAdmin: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n  }, [props.loggedIn])\r\n\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files.item(0);\r\n      const pictureU = URL.createObjectURL(file);\r\n      setNewUser({ ...newUser, pictureUrl: pictureU });\r\n    }\r\n  };\r\n\r\n  const handlePictureClick = async () => {\r\n    if (isPlatform(\"capacitor\")) {\r\n      try {\r\n        const photo = await Camera.getPhoto({\r\n          resultType: CameraResultType.Uri,\r\n          source: CameraSource.Prompt,\r\n          width: 600,\r\n        });\r\n        setNewUser({ ...newUser, pictureUrl: photo.webPath });\r\n      } catch (error) {\r\n        console.log(\"user cancel photo.\");\r\n      }\r\n    }\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const [status, setStatus] = useState({ loading: false, error: false });\r\n  const fileInputRef = useRef<HTMLInputElement>();\r\n\r\n  const handleRegister = async () => {\r\n    const { email, password, userName, pictureUrl } = newUser;\r\n\r\n    try {\r\n      setStatus({ loading: true, error: false });\r\n      const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n      if (!pictureUrl.startsWith(\"/assets\")) {\r\n        newUser.pictureUrl = await savePicture(pictureUrl, user.uid);\r\n      }\r\n\r\n      await createUserProfileDocument2(user, { newUser });\r\n      setStatus({ loading: false, error: false });\r\n      props.logInUser(email, password);\r\n\r\n    } catch (error) {\r\n      setStatus({ loading: false, error: true });\r\n      console.log(\"error \", error);\r\n    }\r\n  };\r\n\r\n  function handleInputChange(e) {\r\n    const { name, value } = e.target;\r\n    setNewUser({ ...newUser, [name]: value });\r\n  }\r\n\r\n  // if (loggedIn) {\r\n  //   return <Redirect to=\"/my/entries\" />;\r\n  // }\r\n\r\n  if (props.user.loggedIn === true) {\r\n    return <Redirect to=\"/teams\" />;\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>Register</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent className=\"ion-padding\">\r\n        <IonList>\r\n          <IonItem>\r\n            <IonLabel position=\"stacked\">Email</IonLabel>\r\n            <IonInput\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={newUser.email}\r\n              onIonChange={(e) => handleInputChange(e)}\r\n            />\r\n          </IonItem>\r\n          <IonItem>\r\n            <IonLabel position=\"stacked\">Password</IonLabel>\r\n            <IonInput\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={newUser.password}\r\n              onIonChange={(e) => handleInputChange(e)}\r\n            />\r\n          </IonItem>\r\n          <IonItem>\r\n            <IonLabel position=\"stacked\">User Name</IonLabel>\r\n            <IonInput\r\n              name='userName'\r\n              type=\"text\"\r\n              value={newUser.userName}\r\n              onIonChange={(e) => handleInputChange(e)}\r\n            />\r\n          </IonItem>\r\n          <IonItem>\r\n            <IonLabel position=\"stacked\">Picture</IonLabel>\r\n            <br></br>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleOnChange}\r\n              hidden\r\n              ref={fileInputRef}\r\n            />\r\n            <img\r\n              src={newUser.pictureUrl}\r\n              alt=\"\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handlePictureClick}\r\n            />\r\n          </IonItem>\r\n        </IonList>\r\n        {status.error && (\r\n          <IonText color=\"danger\">\r\n            Registration failed. Please try again.\r\n          </IonText>\r\n        )}\r\n        <IonButton expand=\"block\" onClick={handleRegister}>\r\n          Create Account\r\n        </IonButton>\r\n        <br></br>\r\n        <IonButton expand=\"block\" fill=\"clear\" routerLink=\"/login\">\r\n          Already have account?\r\n        </IonButton>\r\n        <IonLoading isOpen={status.loading} />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    user: state.auth,\r\n    userLoggedIn: state.auth.loggedIn,\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, { logInUser })(RegisterPage);\r\n","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\AccountPage.tsx",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\Models.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\utils\\helpers.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\shared\\Modal.tsx",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\components\\EntriesItem.tsx",["189","190","191","192","193"],"import {\r\n    IonItem,\r\n    IonLabel,\r\n    IonThumbnail,\r\n    IonImg,\r\n    IonText,\r\n} from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport { formatDate } from '../utils/helpers';\r\nimport { Entry } from '../Models';\r\nimport { connect } from \"react-redux\";\r\nimport { getTeamEvents } from \"../actions/TeamActions\";\r\n\r\nimport './entriesItem.css';\r\nimport { userSelectedTeam } from './../actions/TeamActions';\r\n\r\ninterface EntriesProps {\r\n    entries: Entry[]\r\n}\r\n\r\nconst EntriesItem = (props: any) => {\r\n\r\n    if (!props.teamEvents) {\r\n        return (\r\n            <div>Loading....</div>\r\n        )\r\n    }\r\n    const events = props.teamEvents\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                events.map((event) => (\r\n                    <IonItem\r\n                        button\r\n                        key={event.id}\r\n                        onClick={() => console.log('clicky click')}\r\n                        routerLink={`/my/teams/team/${props.selectedTeam}/entries/view/${event.id}`}\r\n                    //    routerLink={`/my/teams/team/${props.selectedTeam}/entries/view/edit/${event.id}`}\r\n                    >\r\n                        <IonLabel>\r\n                            <h3>{event.title}</h3>\r\n                            <h4>{formatDate(event.date)}</h4>\r\n                        </IonLabel>\r\n                        {!event.isMatch ?\r\n                            <IonText></IonText>\r\n                            :\r\n                            <p className=\"matchDay\">M</p>\r\n                        }\r\n                        {\r\n\r\n                        }\r\n                    </IonItem>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    teamEvents: state.team.events,\r\n    selectedTeam: state.team.team\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(EntriesItem);","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\context\\dataContext.ts",["194","195"],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\store.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\reducers\\index.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\reducers\\AuthReducer.ts",["196"],"import {\r\n  LOG_IN,\r\n  LOG_OUT,\r\n  GET_MEMORIES\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loggedIn: false\r\n};\r\n\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loggedIn: true,\r\n        userId: action.payload.uid\r\n      };\r\n\r\n    case LOG_OUT:\r\n      return {\r\n        state: initialState\r\n      };\r\n\r\n  //   case ADD_TECH:\r\n  //     return {\r\n  //         ...state,\r\n  //         techs: [...state.techs, action.payload],\r\n  //         loading: false\r\n  //     };\r\n\r\n  //   case DELETE_TECH:\r\n  //     return {\r\n  //       ...state,\r\n  //       techs: state.techs.filter(tech => tech.id !== action.payload )\r\n  //     }\r\n\r\n  //   case SET_LOADING:\r\n  //     return {\r\n  //       ...state,\r\n  //       loading: true,\r\n  //     };\r\n\r\n  //   case TECHS_ERROR:\r\n  //       console.error(action.payload)\r\n  //       return {\r\n  //           ...state,\r\n  //           error: action.payload,\r\n  //           loading: false\r\n  //       }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\types.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\AuthActions.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\authActions.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\reducers\\MemoriesReducers.ts",["197"],"import {\r\n    GET_MEMORIES,\r\n    GET_SINGLE_EVENT\r\n  } from \"../actions/types\";\r\n  \r\n\r\n  const initialState = {\r\n  };\r\n  \r\n  \r\n  \r\n  // eslint-disable-next-line import/no-anonymous-default-export\r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_MEMORIES:\r\n        return {\r\n          ...state,\r\n          memories: action.payload,\r\n        };\r\n  \r\n    //   case ADD_TECH:\r\n    //     return {\r\n    //         ...state,\r\n    //         techs: [...state.techs, action.payload],\r\n    //         loading: false\r\n    //     };\r\n  \r\n    //   case DELETE_TECH:\r\n    //     return {\r\n    //       ...state,\r\n    //       techs: state.techs.filter(tech => tech.id !== action.payload )\r\n    //     }\r\n  \r\n    //   case SET_LOADING:\r\n    //     return {\r\n    //       ...state,\r\n    //       loading: true,\r\n    //     };\r\n  \r\n    //   case TECHS_ERROR:\r\n    //       console.error(action.payload)\r\n    //       return {\r\n    //           ...state,\r\n    //           error: action.payload,\r\n    //           loading: false\r\n    //       }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\MemoriesAction.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\MembersPage.tsx",["198"],"import { IonContent, IonList, IonPage, IonText, IonItem } from \"@ionic/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTeamMembers } from '../actions/TeamActions'\r\n\r\nconst MembersPage: React.FC = (props: any) => {\r\n\r\n  useEffect(() => {\r\n    props.getTeamMembers(props.selectedTeam)\r\n  }, [])\r\n\r\n  if (!props.members) {\r\n    return (\r\n      <div> ... Loading </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent className=\"ion-padding\">Where are all the members?\r\n        <IonList>\r\n          {\r\n            props.members.map((member) => (\r\n              <IonItem key={member.id}>\r\n                <IonText>{member.name}</IonText>\r\n              </IonItem>\r\n            ))\r\n          }\r\n        </IonList>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.auth,\r\n  selectedTeam: state.team.team,\r\n  members: state.team.members\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTeamMembers })(MembersPage);\r\n","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\TeamSelectionPage.tsx",["199"],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\TeamPage.tsx",["200","201","202","203","204"],"import {\r\n    IonContent,\r\n    IonList,\r\n    IonPage,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonIcon,\r\n    useIonViewDidEnter,\r\n    useIonViewWillEnter\r\n} from \"@ionic/react\";\r\nimport { add as addIcon } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport EntriesItem from '../components/EntriesItem';\r\nimport { getTeamEvents } from '../actions/TeamActions';\r\nimport { getTeamMembers, userSelectedTeam } from './../actions/TeamActions';\r\nimport { resetSingleEntry } from './../actions/EventsAction';\r\n\r\nconst HomePage: React.FC = (props: any) => {\r\n\r\n    function isUserAdminCheck() {\r\n        const checkingMember = props.teamMembers.filter(member => member.id === props.currentUser.userId)\r\n        if (checkingMember[0].isAdmin === true) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useIonViewWillEnter(() => {\r\n        console.log('I O N VIEW HAS  ENTERED ENTERED  ENTERED  ENTERED  ENTERED ENTERED ', props.selectedTeam)\r\n        // props.resetSingleEntry()\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.getTeamEvents(props.selectedTeam)\r\n    }, [props.selectedTeam]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"RESTTINNGGGGGGG JHGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFJK\")\r\n    //     props.resetSingleEntry()\r\n    // })\r\n\r\n    if (!props.teamEvents) {\r\n        return (\r\n            <div>Loading....</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonContent className=\"ion-padding\">\r\n                <h3>TEAM PAGE</h3>\r\n                {\r\n                    isUserAdminCheck() ?\r\n                        <IonFab vertical=\"bottom\" horizontal=\"end\">\r\n                            <IonFabButton routerLink=\"/my/events/add\">\r\n                                <IonIcon icon={addIcon} />\r\n                            </IonFabButton>\r\n                        </IonFab>\r\n                        :\r\n                        <div></div>\r\n                }\r\n                <IonList>\r\n                    <EntriesItem />\r\n                </IonList>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentUser: state.auth,\r\n    currentUserId: state.auth.user.uid,\r\n    selectedTeam: state.team.team,\r\n    teamEvents: state.team.events,\r\n    teamMembers: state.team.members,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTeamEvents, getTeamMembers, resetSingleEntry })(HomePage);\r\n\r\nfunction ionViewWillEnter(arg0: () => void) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\reducers\\TeamReducer.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\TeamActions.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\pages\\AddEventPage.tsx",["205","206","207","208","209","210","211","212"],"import {\r\n    IonBackButton,\r\n    IonButton,\r\n    IonButtons,\r\n    IonCheckbox,\r\n    IonCol,\r\n    IonContent,\r\n    IonDatetime,\r\n    IonHeader,\r\n    IonInput,\r\n    IonItem,\r\n    IonLabel,\r\n    IonList,\r\n    IonPage,\r\n    IonRow,\r\n    IonText,\r\n    IonTextarea,\r\n    IonTitle,\r\n    IonToggle,\r\n    IonToolbar,\r\n    isPlatform,\r\n} from \"@ionic/react\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { CameraResultType, CameraSource, Plugins } from \"@capacitor/core\";\r\nimport { useHistory } from \"react-router\";\r\n// import { useAuth } from \"../Auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { firestore, storage } from \"../firebase\";\r\n\r\nconst AddEventPage: React.FC = (props: any) => {\r\n    //  const { userId } = useAuth() as any;\r\n    const history = useHistory();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [startTime, setStartTime] = useState('');\r\n    const [endTime, setEndTime] = useState(\"\")\r\n    const [attendanceRequired, setAttendanceRequired] = useState(false)\r\n    const [isMatch, setIsMatch] = useState(false)\r\n\r\n    const result = ''\r\n\r\n    // const [pictureUrl, setPictureUrl] = useState(\"/assets/placeholder.png\");\r\n    // const fileInputRef = useRef<HTMLInputElement>();\r\n\r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         if (pictureUrl.startsWith(\"blob:\")) {\r\n    //             URL.revokeObjectURL(pictureUrl);\r\n    //         }\r\n    //     };\r\n    // }, [pictureUrl]);\r\n\r\n    const handleSave = async () => {\r\n        const entriesRef = firestore\r\n            .collection(\"teams\")\r\n            .doc(props.selectedTeam)\r\n            .collection(\"events\");\r\n        let entryData = { date, title, description, startTime, endTime, attendanceRequired, isMatch, result };\r\n        console.log(entryData)\r\n        await entriesRef.add(entryData);\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonBackButton />\r\n                    </IonButtons>\r\n                    <IonTitle>Adding Team Event</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent className=\"ion-padding\">\r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonLabel >Date</IonLabel>\r\n                        <IonDatetime\r\n                            placeholder=\"Select Date\"\r\n                            value={date}\r\n                            min=\"2021\"\r\n                            max=\"2050-10-30\"\r\n                            onIonChange={(event) => setDate(event.detail.value)}\r\n                        />\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonLabel>\r\n                            Start Time\r\n                        </IonLabel>\r\n                        <IonDatetime\r\n                            placeholder=\"Select Start Time\"\r\n                            pickerFormat=\"h:mm A\"\r\n                            displayFormat=\"h:mm A\"\r\n                            value={startTime}\r\n                            onIonChange={(e) => setStartTime(e.detail.value)}\r\n                        ></IonDatetime>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonLabel>\r\n                            End Time\r\n                        </IonLabel>\r\n                        <IonDatetime\r\n                            placeholder=\"Select End Time\"\r\n                            pickerFormat=\"h:mm A\"\r\n                            displayFormat=\"h:mm A\"\r\n                            value={endTime}\r\n                            onIonChange={(e) => setEndTime(e.detail.value)}\r\n                        ></IonDatetime>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonLabel position=\"stacked\">Title</IonLabel>\r\n                        <IonInput\r\n                            value={title}\r\n                            onIonChange={(event) => setTitle(event.detail.value)}\r\n                        />\r\n                    </IonItem>\r\n\r\n                    <IonItem>\r\n                        <IonLabel position=\"stacked\">Description</IonLabel>\r\n                        <IonTextarea\r\n                            value={description}\r\n                            onIonChange={(event) => setDescription(event.detail.value)}\r\n                        />\r\n                    </IonItem>\r\n\r\n                    <IonItem>\r\n                        <IonCol>\r\n                            <IonRow>\r\n                                <IonCol size=\"10\">\r\n                                    <IonText >\r\n                                        <h4>Attendance Required?</h4>\r\n                                    </IonText>\r\n                                </IonCol>\r\n                                <IonCol size=\"2\">\r\n                                    <IonCheckbox\r\n                                        checked={attendanceRequired}\r\n                                        onIonChange={() => setAttendanceRequired(!attendanceRequired)}\r\n                                    />\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonItem>\r\n\r\n                    <IonItem>\r\n                        <IonCol>\r\n                            <IonRow>\r\n                                <IonCol size=\"10\">\r\n                                    <IonText >\r\n                                        <h4>Is this a Match?</h4>\r\n                                    </IonText>\r\n                                </IonCol>\r\n                                <IonCol size=\"2\">\r\n                                    <IonCheckbox\r\n                                        checked={isMatch}\r\n                                        onIonChange={() => setIsMatch(!isMatch)}\r\n                                    />\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonItem>\r\n                    <IonButton expand=\"block\" onClick={handleSave}>\r\n                        Save\r\n                    </IonButton>\r\n                </IonList>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentUserId: state.auth.user.uid,\r\n    selectedTeam: state.team.team,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AddEventPage);\r\n","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\shared\\EditModel.tsx",["213","214"],"import React, { useState } from 'react';\r\nimport { firestore } from \"../firebase\";\r\nimport { IonModal, IonButton, IonCard, IonRow, IonCol, IonGrid, IonText, IonCheckbox, IonItem, IonList, IonContent, IonTextarea, IonLabel, IonInput, IonDatetime, IonPage } from '@ionic/react';\r\n\r\ninterface modalProps {\r\n    modalText: string,\r\n    displayModal: boolean,\r\n    onCancel: any,\r\n    onConfirm: any,\r\n    eventDetails: any,\r\n    teamId: any,\r\n    eventId: any,\r\n}\r\n\r\nexport const EditModal = ({ modalText, displayModal, onCancel, onConfirm, eventDetails, teamId, eventId }: modalProps) => {\r\n\r\n    const [title, setTitle] = useState(eventDetails.title);\r\n    const [description, setDescription] = useState(eventDetails.description);\r\n    const [date, setDate] = useState(eventDetails.date);\r\n    const [startTime, setStartTime] = useState(eventDetails.startTime);\r\n    const [endTime, setEndTime] = useState(eventDetails.endTime)\r\n    const [attendanceRequired, setAttendanceRequired] = useState(eventDetails.attendanceRequired)\r\n    const [isMatch, setIsMatch] = useState(eventDetails.isMatch)\r\n    const [result, setResult] = useState(eventDetails.result)\r\n\r\n    const handleSave = async () => {\r\n        const entriesRef = firestore\r\n            .collection(\"teams\")\r\n            .doc(teamId)\r\n            .collection(\"events\")\r\n            .doc(eventId);\r\n        let entryData = { date, title, description, startTime, endTime, attendanceRequired, isMatch, result };\r\n        await entriesRef.update(entryData);\r\n        onCancel();\r\n    };\r\n\r\n    return (\r\n        <IonModal\r\n            isOpen={displayModal}\r\n        >\r\n            <IonPage>\r\n                <h4>{modalText}</h4>\r\n                <IonContent className=\"ion-padding\">\r\n                    <IonList>\r\n                        <IonItem>\r\n                            <IonLabel >Date</IonLabel>\r\n                            <IonDatetime\r\n                                placeholder=\"Select Date\"\r\n                                value={date}\r\n                                min=\"2021\"\r\n                                max=\"2050-10-30\"\r\n                                onIonChange={(event) => setDate(event.detail.value)}\r\n                            />\r\n                        </IonItem>\r\n                        <IonItem>\r\n                            <IonLabel>\r\n                                Start Time\r\n                            </IonLabel>\r\n                            <IonDatetime\r\n                                placeholder=\"Select Start Time\"\r\n                                pickerFormat=\"h:mm A\"\r\n                                displayFormat=\"h:mm A\"\r\n                                value={startTime}\r\n                                onIonChange={(e) => setStartTime(e.detail.value)}\r\n                            ></IonDatetime>\r\n                        </IonItem>\r\n                        <IonItem>\r\n                            <IonLabel>\r\n                                End Time\r\n                            </IonLabel>\r\n                            <IonDatetime\r\n                                placeholder=\"Select End Time\"\r\n                                pickerFormat=\"h:mm A\"\r\n                                displayFormat=\"h:mm A\"\r\n                                value={endTime}\r\n                                onIonChange={(e) => setEndTime(e.detail.value)}\r\n                            ></IonDatetime>\r\n                        </IonItem>\r\n                        <IonItem>\r\n                            <IonLabel position=\"stacked\">Title</IonLabel>\r\n                            <IonInput\r\n                                value={title}\r\n                                onIonChange={(event) => setTitle(event.detail.value)}\r\n                            />\r\n                        </IonItem>\r\n\r\n                        <IonItem>\r\n                            <IonLabel position=\"stacked\">Description</IonLabel>\r\n                            <IonTextarea\r\n                                value={description}\r\n                                onIonChange={(event) => setDescription(event.detail.value)}\r\n                            />\r\n                        </IonItem>\r\n\r\n                        <IonItem>\r\n                            <IonCol>\r\n                                <IonRow>\r\n                                    <IonCol size=\"10\">\r\n                                        <IonText >\r\n                                            <h4>Attendance Required?</h4>\r\n                                        </IonText>\r\n                                    </IonCol>\r\n                                    <IonCol size=\"2\">\r\n                                        <IonCheckbox\r\n                                            checked={attendanceRequired}\r\n                                            onIonChange={() => setAttendanceRequired(!attendanceRequired)}\r\n                                        />\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonCol>\r\n                        </IonItem>\r\n\r\n                        <IonItem>\r\n                            <IonCol>\r\n                                <IonRow>\r\n                                    <IonCol size=\"10\">\r\n                                        <IonText >\r\n                                            <h4>Is this a Match?</h4>\r\n                                        </IonText>\r\n                                    </IonCol>\r\n                                    <IonCol size=\"2\">\r\n                                        <IonCheckbox\r\n                                            checked={isMatch}\r\n                                            onIonChange={() => setIsMatch(!isMatch)}\r\n                                        />\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                                {\r\n                                    isMatch ?\r\n                                        <IonRow>\r\n                                            <IonLabel >Result</IonLabel>\r\n                                            <IonTextarea\r\n                                                value={result}\r\n                                                onIonChange={(event) => setResult(event.detail.value)}\r\n                                            />\r\n                                        </IonRow>\r\n                                        :\r\n                                        <div></div>\r\n                                }\r\n\r\n                            </IonCol>\r\n                        </IonItem>\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonButton fill=\"outline\" color=\"danger\" onClick={onConfirm} >CONFIRM</IonButton>\r\n                            </IonCol>\r\n                            <IonCol></IonCol>\r\n                            <IonCol>\r\n                                <IonButton fill=\"outline\" onClick={onCancel}>CANCEL</IonButton>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                        <IonButton expand=\"block\" onClick={handleSave}>\r\n                            Save\r\n                        </IonButton>\r\n                    </IonList>\r\n                </IonContent>\r\n\r\n            </IonPage>\r\n        </IonModal>\r\n    );\r\n};","C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\actions\\EventsAction.ts",[],"C:\\Users\\Luk'sC15\\coding\\ionic\\moments\\daily-moments\\src\\shared\\EditPage.tsx",["215","216","217"],"import React, { useState, useEffect } from 'react';\r\nimport { firestore } from \"../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { IonModal, IonButton, IonRow, IonCol, IonText, IonCheckbox, IonItem, IonList, IonContent, IonTextarea, IonLabel, IonInput, IonDatetime, IonPage } from '@ionic/react';\r\n\r\ninterface modalProps {\r\n    modalText: string,\r\n    displayModal: boolean,\r\n    onCancel: any,\r\n    onConfirm: any,\r\n    eventDetails: any,\r\n    teamId: any,\r\n    eventId: any,\r\n}\r\n\r\ninterface RouterParams {\r\n    id: string;\r\n}\r\n\r\nconst EditPage: React.FC = (props: any) => {\r\n    const eventDetails = props.singleEntry\r\n\r\n    const history = useHistory();\r\n    const { id } = useParams<RouterParams>();\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [startTime, setStartTime] = useState('');\r\n    const [endTime, setEndTime] = useState('')\r\n    const [attendanceRequired, setAttendanceRequired] = useState(Boolean)\r\n    const [isMatch, setIsMatch] = useState(Boolean)\r\n    const [result, setResult] = useState('')\r\n\r\n    useEffect(() => {\r\n        setTitle(eventDetails?.title);\r\n        setDescription(eventDetails?.description);\r\n        setDate(eventDetails?.date);\r\n        setStartTime(eventDetails?.startTime);\r\n        setEndTime(eventDetails?.endTime)\r\n        setAttendanceRequired(eventDetails?.attendanceRequired)\r\n        setIsMatch(eventDetails?.isMatch)\r\n        setResult(eventDetails?.result)\r\n    }, [])\r\n\r\n    const handleSave = async () => {\r\n        const entriesRef = firestore\r\n            .collection(\"teams\")\r\n            .doc(props.selectedTeam)\r\n            .collection(\"events\")\r\n            .doc(id);\r\n        let entryData = { date, title, description, startTime, endTime, attendanceRequired, isMatch, result };\r\n        await entriesRef.update(entryData);\r\n        // onCancel();\r\n    };\r\n    const onConfirm = () => {\r\n        handleSave()\r\n        history.goBack()\r\n    }\r\n    const onCancel = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    if (!eventDetails) {\r\n        return (\r\n            <div>Loading....</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonContent className=\"ion-padding\">\r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonLabel >Date</IonLabel>\r\n                        <IonDatetime\r\n                            placeholder=\"Select Date\"\r\n                            value={date}\r\n                            min=\"2021\"\r\n                            max=\"2050-10-30\"\r\n                            onIonChange={(event) => setDate(event.detail.value)}\r\n                        />\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonLabel>\r\n                            Start Time\r\n                        </IonLabel>\r\n                        <IonDatetime\r\n                            placeholder=\"Select Start Time\"\r\n                            pickerFormat=\"h:mm A\"\r\n                            displayFormat=\"h:mm A\"\r\n                            value={startTime}\r\n                            onIonChange={(e) => setStartTime(e.detail.value)}\r\n                        ></IonDatetime>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonLabel>\r\n                            End Time\r\n                        </IonLabel>\r\n                        <IonDatetime\r\n                            placeholder=\"Select End Time\"\r\n                            pickerFormat=\"h:mm A\"\r\n                            displayFormat=\"h:mm A\"\r\n                            value={endTime}\r\n                            onIonChange={(e) => setEndTime(e.detail.value)}\r\n                        ></IonDatetime>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonLabel position=\"stacked\">Title</IonLabel>\r\n                        <IonInput\r\n                            value={title}\r\n                            onIonChange={(event) => setTitle(event.detail.value)}\r\n                        />\r\n                    </IonItem>\r\n\r\n                    <IonItem>\r\n                        <IonLabel position=\"stacked\">Description</IonLabel>\r\n                        <IonTextarea\r\n                            value={description}\r\n                            onIonChange={(event) => setDescription(event.detail.value)}\r\n                        />\r\n                    </IonItem>\r\n\r\n                    <IonItem>\r\n                        <IonCol>\r\n                            <IonRow>\r\n                                <IonCol size=\"10\">\r\n                                    <IonText >\r\n                                        <h4>Attendance Required?</h4>\r\n                                    </IonText>\r\n                                </IonCol>\r\n                                <IonCol size=\"2\">\r\n                                    <IonCheckbox\r\n                                        checked={attendanceRequired}\r\n                                        onIonChange={() => setAttendanceRequired(!attendanceRequired)}\r\n                                    />\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonItem>\r\n\r\n                    <IonItem>\r\n                        <IonCol>\r\n                            <IonRow>\r\n                                <IonCol size=\"10\">\r\n                                    <IonText >\r\n                                        <h4>Is this a Match?</h4>\r\n                                    </IonText>\r\n                                </IonCol>\r\n                                <IonCol size=\"2\">\r\n                                    <IonCheckbox\r\n                                        checked={isMatch}\r\n                                        onIonChange={() => setIsMatch(!isMatch)}\r\n                                    />\r\n                                </IonCol>\r\n                            </IonRow>\r\n                            {\r\n                                isMatch ?\r\n                                    <IonRow>\r\n                                        <IonLabel >Result</IonLabel>\r\n                                        <IonTextarea\r\n                                            value={result}\r\n                                            onIonChange={(event) => setResult(event.detail.value)}\r\n                                        />\r\n                                    </IonRow>\r\n                                    :\r\n                                    <div></div>\r\n                            }\r\n\r\n                        </IonCol>\r\n                    </IonItem>\r\n                    <IonRow>\r\n                        <IonCol>\r\n                            <IonButton fill=\"outline\" color=\"danger\" onClick={onConfirm} >CONFIRM</IonButton>\r\n                        </IonCol>\r\n                        <IonCol></IonCol>\r\n                        <IonCol>\r\n                            <IonButton fill=\"outline\" onClick={onCancel}>CANCEL</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                    <IonButton expand=\"block\" onClick={handleSave}>\r\n                        Save\r\n                    </IonButton>\r\n                </IonList>\r\n            </IonContent>\r\n\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentUser: state.auth,\r\n    currentUserId: state.auth.user.uid,\r\n    selectedTeam: state.team.team,\r\n    teamEvents: state.team.events,\r\n    teamMembers: state.team.members,\r\n    singleEntry: state.team.singleEvent,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(EditPage)",{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":1,"column":18,"nodeType":"224","messageId":"225","endLine":1,"endColumn":28},{"ruleId":"222","severity":1,"message":"226","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":18},{"ruleId":"222","severity":1,"message":"227","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":13},{"ruleId":"222","severity":1,"message":"228","line":11,"column":10,"nodeType":"224","messageId":"225","endLine":11,"endColumn":21},{"ruleId":"222","severity":1,"message":"229","line":11,"column":23,"nodeType":"224","messageId":"225","endLine":11,"endColumn":34},{"ruleId":"222","severity":1,"message":"230","line":19,"column":21,"nodeType":"224","messageId":"225","endLine":19,"endColumn":25},{"ruleId":"222","severity":1,"message":"231","line":3,"column":3,"nodeType":"224","messageId":"225","endLine":3,"endColumn":12},{"ruleId":"222","severity":1,"message":"232","line":6,"column":3,"nodeType":"224","messageId":"225","endLine":6,"endColumn":11},{"ruleId":"222","severity":1,"message":"233","line":7,"column":3,"nodeType":"224","messageId":"225","endLine":7,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":27,"suggestions":"237"},{"ruleId":"218","replacedBy":"238"},{"ruleId":"220","replacedBy":"239"},{"ruleId":"222","severity":1,"message":"240","line":14,"column":3,"nodeType":"224","messageId":"225","endLine":14,"endColumn":21},{"ruleId":"234","severity":1,"message":"241","line":58,"column":6,"nodeType":"236","endLine":58,"endColumn":8,"suggestions":"242"},{"ruleId":"222","severity":1,"message":"243","line":15,"column":27,"nodeType":"224","messageId":"225","endLine":15,"endColumn":36},{"ruleId":"222","severity":1,"message":"244","line":27,"column":18,"nodeType":"224","messageId":"225","endLine":27,"endColumn":27},{"ruleId":"222","severity":1,"message":"245","line":11,"column":11,"nodeType":"224","messageId":"225","endLine":11,"endColumn":19},{"ruleId":"222","severity":1,"message":"246","line":22,"column":8,"nodeType":"224","messageId":"225","endLine":22,"endColumn":16},{"ruleId":"222","severity":1,"message":"247","line":25,"column":10,"nodeType":"224","messageId":"225","endLine":25,"endColumn":17},{"ruleId":"222","severity":1,"message":"248","line":32,"column":10,"nodeType":"224","messageId":"225","endLine":32,"endColumn":19},{"ruleId":"222","severity":1,"message":"249","line":34,"column":10,"nodeType":"224","messageId":"225","endLine":34,"endColumn":26},{"ruleId":"222","severity":1,"message":"250","line":35,"column":10,"nodeType":"224","messageId":"225","endLine":35,"endColumn":26},{"ruleId":"222","severity":1,"message":"251","line":41,"column":10,"nodeType":"224","messageId":"225","endLine":41,"endColumn":21},{"ruleId":"222","severity":1,"message":"252","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":19},{"ruleId":"222","severity":1,"message":"253","line":4,"column":21,"nodeType":"224","messageId":"225","endLine":4,"endColumn":28},{"ruleId":"218","replacedBy":"254"},{"ruleId":"220","replacedBy":"255"},{"ruleId":"222","severity":1,"message":"256","line":78,"column":30,"nodeType":"224","messageId":"225","endLine":78,"endColumn":38},{"ruleId":"222","severity":1,"message":"257","line":4,"column":5,"nodeType":"224","messageId":"225","endLine":4,"endColumn":17},{"ruleId":"222","severity":1,"message":"258","line":5,"column":5,"nodeType":"224","messageId":"225","endLine":5,"endColumn":11},{"ruleId":"222","severity":1,"message":"259","line":12,"column":10,"nodeType":"224","messageId":"225","endLine":12,"endColumn":23},{"ruleId":"222","severity":1,"message":"250","line":15,"column":10,"nodeType":"224","messageId":"225","endLine":15,"endColumn":26},{"ruleId":"222","severity":1,"message":"260","line":17,"column":11,"nodeType":"224","messageId":"225","endLine":17,"endColumn":23},{"ruleId":"222","severity":1,"message":"261","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":30},{"ruleId":"222","severity":1,"message":"262","line":7,"column":30,"nodeType":"224","messageId":"225","endLine":7,"endColumn":33},{"ruleId":"222","severity":1,"message":"263","line":4,"column":3,"nodeType":"224","messageId":"225","endLine":4,"endColumn":15},{"ruleId":"222","severity":1,"message":"264","line":3,"column":5,"nodeType":"224","messageId":"225","endLine":3,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":10,"column":6,"nodeType":"236","endLine":10,"endColumn":8,"suggestions":"265"},{"ruleId":"222","severity":1,"message":"266","line":8,"column":5,"nodeType":"224","messageId":"225","endLine":8,"endColumn":24},{"ruleId":"222","severity":1,"message":"240","line":8,"column":5,"nodeType":"224","messageId":"225","endLine":8,"endColumn":23},{"ruleId":"222","severity":1,"message":"267","line":12,"column":28,"nodeType":"224","messageId":"225","endLine":12,"endColumn":36},{"ruleId":"222","severity":1,"message":"250","line":16,"column":26,"nodeType":"224","messageId":"225","endLine":16,"endColumn":42},{"ruleId":"234","severity":1,"message":"235","line":35,"column":8,"nodeType":"236","endLine":35,"endColumn":28,"suggestions":"268"},{"ruleId":"222","severity":1,"message":"269","line":80,"column":10,"nodeType":"224","messageId":"225","endLine":80,"endColumn":26},{"ruleId":"222","severity":1,"message":"270","line":19,"column":5,"nodeType":"224","messageId":"225","endLine":19,"endColumn":14},{"ruleId":"222","severity":1,"message":"271","line":21,"column":5,"nodeType":"224","messageId":"225","endLine":21,"endColumn":15},{"ruleId":"222","severity":1,"message":"243","line":23,"column":27,"nodeType":"224","messageId":"225","endLine":23,"endColumn":36},{"ruleId":"222","severity":1,"message":"272","line":23,"column":38,"nodeType":"224","messageId":"225","endLine":23,"endColumn":44},{"ruleId":"222","severity":1,"message":"273","line":24,"column":10,"nodeType":"224","messageId":"225","endLine":24,"endColumn":26},{"ruleId":"222","severity":1,"message":"274","line":24,"column":28,"nodeType":"224","messageId":"225","endLine":24,"endColumn":40},{"ruleId":"222","severity":1,"message":"275","line":24,"column":42,"nodeType":"224","messageId":"225","endLine":24,"endColumn":49},{"ruleId":"222","severity":1,"message":"276","line":29,"column":21,"nodeType":"224","messageId":"225","endLine":29,"endColumn":28},{"ruleId":"222","severity":1,"message":"277","line":3,"column":31,"nodeType":"224","messageId":"225","endLine":3,"endColumn":38},{"ruleId":"222","severity":1,"message":"278","line":3,"column":56,"nodeType":"224","messageId":"225","endLine":3,"endColumn":63},{"ruleId":"222","severity":1,"message":"279","line":5,"column":10,"nodeType":"224","messageId":"225","endLine":5,"endColumn":18},{"ruleId":"222","severity":1,"message":"280","line":7,"column":11,"nodeType":"224","messageId":"225","endLine":7,"endColumn":21},{"ruleId":"234","severity":1,"message":"281","line":44,"column":8,"nodeType":"236","endLine":44,"endColumn":10,"suggestions":"282"},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"@typescript-eslint/no-unused-vars","'IonLoading' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'store' is defined but never used.","'AuthContext' is defined but never used.","'useAuthInit' is defined but never used.","'user' is assigned a value but never used.","'IonHeader' is defined but never used.","'IonTitle' is defined but never used.","'IonToolbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["285"],["283"],["284"],"'useIonViewDidEnter' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["286"],"'useEffect' is defined but never used.","'setStatus' is assigned a value but never used.","'homeIcon' is defined but never used.","'HomePage' is defined but never used.","'useAuth' is defined but never used.","'EditModal' is defined but never used.","'resetSingleEntry' is defined but never used.","'userSelectedTeam' is defined but never used.","'currentTeam' is assigned a value but never used.","'firestore' is defined but never used.","'Account' is defined but never used.",["283"],["284"],"'userName' is assigned a value but never used.","'IonThumbnail' is defined but never used.","'IonImg' is defined but never used.","'getTeamEvents' is defined but never used.","'EntriesProps' is defined but never used.","'createContext' is defined but never used.","'Any' is defined but never used.","'GET_MEMORIES' is defined but never used.","'GET_SINGLE_EVENT' is defined but never used.",["287"],"'useIonViewWillEnter' is defined but never used.","'useState' is defined but never used.",["288"],"'ionViewWillEnter' is defined but never used.","'IonToggle' is defined but never used.","'isPlatform' is defined but never used.","'useRef' is defined but never used.","'CameraResultType' is defined but never used.","'CameraSource' is defined but never used.","'Plugins' is defined but never used.","'storage' is defined but never used.","'IonCard' is defined but never used.","'IonGrid' is defined but never used.","'IonModal' is defined but never used.","'modalProps' is defined but never used.","React Hook useEffect has missing dependencies: 'eventDetails?.attendanceRequired', 'eventDetails?.date', 'eventDetails?.description', 'eventDetails?.endTime', 'eventDetails?.isMatch', 'eventDetails?.result', 'eventDetails?.startTime', and 'eventDetails?.title'. Either include them or remove the dependency array.",["289"],"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [props, props.currentUserId]",{"range":"300","text":"301"},"Update the dependencies array to be: [id, props]",{"range":"302","text":"303"},"Update the dependencies array to be: [props]",{"range":"304","text":"305"},"Update the dependencies array to be: [props, props.selectedTeam]",{"range":"306","text":"307"},"Update the dependencies array to be: [eventDetails?.attendanceRequired, eventDetails?.date, eventDetails?.description, eventDetails?.endTime, eventDetails?.isMatch, eventDetails?.result, eventDetails?.startTime, eventDetails?.title]",{"range":"308","text":"309"},[534,555],"[props, props.currentUserId]",[1795,1797],"[id, props]",[345,347],"[props]",[1129,1149],"[props, props.selectedTeam]",[1595,1597],"[eventDetails?.attendanceRequired, eventDetails?.date, eventDetails?.description, eventDetails?.endTime, eventDetails?.isMatch, eventDetails?.result, eventDetails?.startTime, eventDetails?.title]"]